#!/usr/bin/env bash

#set -e
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
cd $DIR
export REPO="`git rev-parse --show-toplevel`"
BASH_DIR=$REPO/bash
SCRIPTS=$BASH_DIR/scripts
BASH_SRC=bash_"$(date +%s)"
touch -f $BASH_SRC

function init() {
  echo -e "Initialized from $REPO"
  mkdir -p $REPO/history
  mv -v $REPO/bash_* $REPO/history
  script_init
}

function script_init() {
  generate_config

  echo -e "\nLinking source $BASH_SRC to target $HOME/.sources"
  ln -fsn -v $REPO/$BASH_SRC $HOME/.sources

  echo "Done."
}

function generate_config() {
  echo -e "\nGenerating sources from $SCRIPTS"
  for f in $SCRIPTS/*
  do
    cat $f >> $BASH_SRC
  done
  os_patch
  echo "Done."
}

# Path mismatches in supported command flags
function os_patch() {
  OS="`uname`"
  case $OS in
    'Linux')
      OS='Linux'
      echo "alias ls='ls --color=auto'" >> $BASH_SRC
      ;;
    'FreeBSD')
      OS='FreeBSD'
      echo "alias ls='ls -G'" >> $BASH_SRC
      ;;
    'Darwin')
      OS='Mac'
      ;;
    *) ;;
  esac
}
# ln -s /mnt/usr/lib/* /usr/lib/
function link_bash() {
  ln -fsn -v $REPO/bash/bash_logout $HOME/.bash_logout
  ln -fsn -v $REPO/bash/bash_profile $HOME/.bash_profile
  ln -fsn -v $REPO/bash/bashrc $HOME/.bashrc
  ln -fsn -v $REPO/bash/profile $HOME/.profile
}

init
echo '------ Symlinking... ------'
link_bash
echo '------ Done ------'

source $BASH_DIR/bash_profile
