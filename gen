#!/bin/bash

if type nvim >/dev/null 2>/dev/null; then
  echo -e `\n vim --version | head -n 1`
else
  alias vim=nvim
  echo -e `\n nvim --version | head -n 1`
fi

alias als="vim ~/.gen"
# List/Search
alias afind='ack -il'
alias history='fc -l 1'
alias l='ls -lah'
alias la='ls -lAh'
alias ll='ls -lh'
alias lsa='ls -lah'
alias md='mkdir -p'
alias sudo='sudo '
alias po='popd'
alias pu='pushd'
alias rd='rmdir'
alias cp='cp -i'
alias mv='mv -i'

# logkeys
alias export-keymap='sudo logkeys --export-keymap en_US.keymap'
alias logkeys-start='sudo logkeys --start --keymap ~/i18n/en_US.keymap'
alias logkeys-stop='sudo logkeys --k'
alias fllk='sudo tail --follow /var/log/logkeys.log'

# Search
alias grep='grep $grep_opts'
alias egrep='egrep $grep_opts'
alias fgrep='fgrep $grep_opts'

# Bash
alias bp='vim ~/.bash_profile'
alias srcbp='source ~/.bash_profile'
alias bsh='vim ~/.bashrc'
alias srcbsh='source ~/.bashrc'
alias pf='vim ~/.profile'
alias srcpf='source ~/.profile'

# Directories
alias ~='cd ~'                                  # ~:            Go Home
alias path='echo -e ${PATH//:/\\n}'             # path:         Echo all executable Paths
alias dotfiles='cd ~/.dotfiles'                 # dotfiles:     Go to custom dotfiles directory

# Utilities
alias fixtty='reset; stty sane; tput rs1; clear; echo -e "\033c"'
alias DT='tee ~/Desktop/terminalOut.txt'
#!/bin/bash
# Aliases ported from github.com/robbyrussell/oh-my-zsh/

function current_branch() {
  git_current_branch
}

function parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# Pretty log messages
function _git_log_prettily(){
  if ! [ -z $1 ]; then
    git log --pretty=$1
  fi
}

# Warn if the current branch is a WIP
function work_in_progress() {
  if $(git log -n 1 2>/dev/null | grep -q -c "\-\-wip\-\-"); then
    echo "WIP!!"
  fi
}

function git_current_branch() {
  git branch | grep \* | cut -d  " " -f2
}

function ggf() {
  [[ "$#" != 1 ]] && local b="$(git_current_branch)"
  git push --force origin "${b:=$1}"
}

function ggfl() {
  [[ "$#" != 1 ]] && local b="$(git_current_branch)"
  git push --force-with-lease origin "${b:=$1}"
}

function ggl() {
  if [[ "$#" != 0 ]] && [[ "$#" != 1 ]]; then
    git pull origin "${*}"
  else
    [[ "$#" == 0 ]] && local b="$(git_current_branch)"
    git pull origin "${b:=$1}"
  fi
}

function ggp() {
  if [[ "$#" != 0 ]] && [[ "$#" != 1 ]]; then
    git push origin "${*}"
  else
    [[ "$#" == 0 ]] && local b="$(git_current_branch)"
    git push origin "${b:=$1}"
  fi
}

function ggpnp() {
  if [[ "$#" == 0 ]]; then
    ggl && ggp
  else
    ggl "${*}" && ggp "${*}"
  fi
}

function ggu() {
  [[ "$#" != 1 ]] && local b="$(git_current_branch)"
  git pull --rebase origin "${b:=$1}"
}

# -------------------------
# Oh-my-zsh Git
# -------------------------
alias g='git'

alias ga='git add'
alias gaa='git add --all'
alias gapa='git add --patch'
alias gau='git add --update'
alias gav='git add --verbose'
alias gap='git apply'

alias gb='git branch'
alias gba='git branch -a'
alias gbd='git branch -d'
alias gbda='git branch --no-color --merged | command grep -vE "^(\+|\*|\s*(master|develop|dev)\s*$)" | command xargs -n 1 git branch -d'
alias gbD='git branch -D'
alias gbl='git blame -b -w'
alias gbnm='git branch --no-merged'
alias gbr='git branch --remote'
alias gbs='git bisect'
alias gbsb='git bisect bad'
alias gbsg='git bisect good'
alias gbsr='git bisect reset'
alias gbss='git bisect start'

alias gc='git commit -v'
alias gc!='git commit -v --amend'
alias gcn!='git commit -v --no-edit --amend'
alias gca='git commit -v -a'
alias gca!='git commit -v -a --amend'
alias gcan!='git commit -v -a --no-edit --amend'
alias gcans!='git commit -v -a -s --no-edit --amend'
alias gcam='git commit -a -m'
alias gcsm='git commit -s -m'
alias gcb='git checkout -b'
alias gcf='git config --list'
alias gcl='git clone --recurse-submodules'
alias gclean='git clean -id'
alias gpristine='git reset --hard && git clean -dfx'
alias gcm='git checkout master'
alias gcd='git checkout develop'
alias gcmsg='git commit -m'
alias gco='git checkout'
alias gcount='git shortlog -sn'
alias gcp='git cherry-pick'
alias gcpa='git cherry-pick --abort'
alias gcpc='git cherry-pick --continue'
alias gcs='git commit -S'

alias gd='git diff'
alias gdca='git diff --cached'
alias gdcw='git diff --cached --word-diff'
alias gdct='git describe --tags $(git rev-list --tags --max-count=1)'
alias gds='git diff --staged'
alias gdt='git diff-tree --no-commit-id --name-only -r'
alias gdw='git diff --word-diff'

alias gf='git fetch'
alias gfa='git fetch --all --prune'
alias gfo='git fetch origin'

alias gfg='git ls-files | grep'

alias gg='git gui citool'
alias gga='git gui citool --amend'


alias ggpur='ggu'
alias ggpull='git pull origin "$(git_current_branch)"'
alias ggpush='git push origin "$(git_current_branch)"'

alias ggsup='git branch --set-upstream-to=origin/$(git_current_branch)'
alias gpsup='git push --set-upstream origin $(git_current_branch)'

alias ghh='git help'

alias gignore='git update-index --assume-unchanged'
alias gignored='git ls-files -v | grep "^[[:lower:]]"'
alias git-svn-dcommit-push='git svn dcommit && git push github master:svntrunk'

alias gk='\gitk --all --branches'
alias gke='\gitk --all $(git log -g --pretty=%h)'

alias gl='git pull'
alias glg='git log --stat'
alias glgp='git log --stat -p'
alias glgg='git log --graph'
alias glgga='git log --graph --decorate --all'
alias glgm='git log --graph --max-count=10'
alias glo='git log --oneline --decorate'
alias glol="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'"
alias glols="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --stat"
alias glod="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'"
alias glods="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --date=short"
alias glola="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --all"
alias glog='git log --oneline --decorate --graph'
alias gloga='git log --oneline --decorate --graph --all'

alias gm='git merge'
alias gmom='git merge origin/master'
alias gmt='git mergetool --no-prompt'
alias gmtvim='git mergetool --no-prompt --tool=vimdiff'
alias gmum='git merge upstream/master'
alias gma='git merge --abort'

alias gp='git push'
alias gpd='git push --dry-run'
alias gpf='git push --force-with-lease'
alias gpf!='git push --force'
alias gpoat='git push origin --all && git push origin --tags'
alias gpu='git push upstream'
alias gpv='git push -v'

alias gr='git remote'
alias gra='git remote add'
alias grb='git rebase'
alias grba='git rebase --abort'
alias grbc='git rebase --continue'
alias grbd='git rebase develop'
alias grbi='git rebase -i'
alias grbm='git rebase master'
alias grbs='git rebase --skip'
alias grev='git revert'
alias grh='git reset'
alias grhh='git reset --hard'
alias groh='git reset origin/$(git_current_branch) --hard'
alias grm='git rm'
alias grmc='git rm --cached'
alias grmv='git remote rename'
alias grrm='git remote remove'
alias grs='git restore'
alias grset='git remote set-url'
alias grss='git restore --source'
alias grt='cd "$(git rev-parse --show-toplevel || echo .)"'
alias gru='git reset --'
alias grup='git remote update'
alias grv='git remote -v'

alias gsb='git status -sb'
alias gsd='git svn dcommit'
alias gsh='git show'
alias gsi='git submodule init'
alias gsps='git show --pretty=short --show-signature'
alias gsr='git svn rebase'
alias gss='git status -s'
alias gst='git status'

alias gstaa='git stash apply'
alias gstc='git stash clear'
alias gstd='git stash drop'
alias gstl='git stash list'
alias gstp='git stash pop'
alias gsts='git stash show --text'
alias gstall='git stash --all'
alias gsu='git submodule update'
alias gsw='git switch'
alias gswc='git switch -c'

alias gts='git tag -s'
alias gtv='git tag | sort -V'
alias gtl='gtl(){ git tag --sort=-v:refname -n -l "${1}*" }; noglob gtl'

alias gunignore='git update-index --no-assume-unchanged'
alias gunwip='git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1'
alias gup='git pull --rebase'
alias gupv='git pull --rebase -v'
alias gupa='git pull --rebase --autostash'
alias gupav='git pull --rebase --autostash -v'
alias glum='git pull upstream master'

alias gwch='git whatchanged -p --abbrev-commit --pretty=medium'
alias gwip='git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign -m "--wip-- [skip ci]"'
#!/bin/bash

# memHogsTop, memHogsPs:  Find memory hogs
# ----------------------------------------------------
alias memHogsTop='top -l 1 -o rsize | head -20'
alias memHogsPs='ps wwaxm -o pid,stat,vsize,rss,time,command | head -10'
alias cpu_hogs='ps wwaxr -o pid,stat,%cpu,time,command | head -10' #cpuHogs:  Find CPU hogs
alias topForever='top -l 9999999 -s 10 -o cpu' # topForever:  Continual 'top' listing (every 10 seconds)
alias ttop="top -R -F -s 10 -o rsize" # ttop:  Recommended 'top' invocation to minimize resources

# Makes new Dir and jumps inside
mkcd () {
  mkdir -p "$1" && cd "$1";
}

# Opens any file in MacOS Quicklook Preview
ql () {
  qlmanage -p "$*" >& /dev/null;
}

# Moves file to Trash
trash () {
  command mv "$@" ~/.Trash ;
}

# Find the file under the current directory
ff () {
  /usr/bin/find . -name "$@" ;
}

# Find the file whose name starts with the givens string
ffs () {
  /usr/bin/find . -name "$@"'*' ;
}

# Find file whos name ends with a given string
ffe () {
  /usr/bin/find . -name '*'"$@" ;
}


# spotlight: Search for a file using MacOS Spotlight's metadata
spotlight () { mdfind "kMDItemDisplayName == '$@'wc"; }


# my_ps: List processes owned by my user:
# ------------------------------------------------------------
my_ps() { ps $@ -u $USER -o pid,%cpu,%mem,start,time,bsdtime,command ; }
#!/bin/bash/
#  ---------------------------------------------------------------------------
#  Description:  This file holds human readible networking utils.
#  Motivation:   Shortcut cmds <ifconfig> | ps aux | ipconfig | ipfw
#  ---------------------------------------------------------------------------
#alias lsockU='sudo /usr/sbin/lsof -nP | grep UDP'   # lsockU:       Display only open UDP sockets
#alias lsockT='sudo /usr/sbin/lsof -nP | grep TCP'   # lsockT:       Display only open TCP sockets
#alias ipInfo0='ipconfig getpacket en0'              # ipInfo0:      Get info on connections for en0
#alias ipInfo1='ipconfig getpacket en1'              # ipInfo1:      Get info on connections for en1
#alias openPorts='sudo lsof -i | grep LISTEN'        # openPorts:    All listening connections
#alias showBlocked='sudo ipfw list'                  # showBlocked:  All ipfw rules inc/ blocked IP

#   ii:  display useful host related informaton
#   -------------------------------------------------------------------
function ii() {
  echo -e "\n${ylw}Logged on as: ${nc}$USER"
  echo -e "${ylw}Hostname: ${nc}$HOSTNAME"
  echo -e "\n${grn}Current date: ${nc}"; date
  echo -e "\n${grn}System information: ${nc}"; sys_info
  echo -e "\n${grn}Machine stats: ${nc}"; uptime
  echo -e "\n${grn}LAN: ${white} " ; iip
  echo -e "\n${nc}"
}

#   ip:  display IPv4 and IPv6 public addresses
#   -------------------------------------------------------------------

function iip() {
  echo -e "${gry}$(ifconfig | grep -e ^en*0* -e inet)"
}

function sys_info() {
  os=`uname -s`
  os_r=`uname -r`
  os_v=`uname -v`
  p_arch=`uname -p`

  echo -e "${nc} ${os} ${os_r} ${os_v} ${p_arch}"
}

# edit_hosts: Edit /etc/hosts file
alias edit_hosts='sudo edit /etc/hosts'
alias sshd-logs='sudo tail -f /var/log/auth.log'

# find_pid: Find out the pid of a specified process
# -----------------------------------------------------
# Note that the command name can be specified via a regex
# E.g. findPid '/d$/' finds pids of all processes with names ending in 'd'
# Without the 'sudo' it will only find processes of the current user
#   -----------------------------------------------------
function find-pid() { lsof -t -c "$@" ; }

# http_headers:      Grabs headers from web page
function http-headers() { /usr/bin/curl -I -L $@ ; }
